{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD0-Gcro2-YgPSdeDuoiHmXRq9akRteGKg',\n  authDomain: 'biscuitt-21b7d.firebaseapp.com',\n  databaseURL: \"https://biscuitt-21b7d.firebaseio.com\",\n  projectId: 'biscuitt-21b7d',\n  storageBucket: 'biscuitt-21b7d.appspot.com',\n  messagingSenderId: '138914182592',\n  appId: '1:138914182592:android:0ad3a72da157ea12534425'\n};\nexport default {\n  name: 'UploadsChart',\n  data() {\n    return {\n      chart: null,\n      data: null,\n      countValue: null // Initialize countValue in the component's data\n    };\n  },\n\n  async mounted() {\n    // Fetch count from Firestore and set countValue\n    await this.fetchCount();\n    // Fetch data for the chart\n    this.fetch();\n  },\n  watch: {\n    data: 'createChart'\n  },\n  methods: {\n    async fetchCount() {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const db = getFirestore(firebaseApp);\n      const docRef = doc(db, \"file_tracking\", \"pick_file_counter\");\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        this.countValue = docSnap.data().count;\n        console.log(\"Count Value:\", this.countValue);\n      } else {\n        console.log(\"No such document!\");\n      }\n      console.log('Firestore Database:', db);\n    },\n    async fetch() {\n      this.data = await this.func();\n    },\n    async func() {\n      console.log(\"hello world\", this.countValue);\n      return [3, 6, 4, 8, 0, this.countValue];\n    },\n    createChart() {\n      if (this.data) {\n        const ctx = this.$refs.uploadsChartCanvas.getContext('2d');\n        this.chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: ['2023-11-27', '2023-11-28', '2023-11-29', '2023-11-30', '2023-12-01', '2023-12-02'],\n            datasets: [{\n              label: 'Number of Uploads',\n              data: this.data,\n              backgroundColor: 'rgba(54, 162, 235, 0.5)',\n              borderColor: 'rgba(54, 162, 235, 1)',\n              fill: false\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            responsive: false\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Chart","initializeApp","getFirestore","doc","getDoc","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","name","data","chart","countValue","mounted","fetchCount","fetch","watch","methods","firebaseApp","db","docRef","docSnap","exists","count","console","log","func","createChart","ctx","$refs","uploadsChartCanvas","getContext","type","labels","datasets","label","backgroundColor","borderColor","fill","options","scales","y","beginAtZero","responsive"],"sources":["/Users/shashaliu/Desktop/mobile/biscuitt_dashboard/biscuitt-dashboard/src/components/UploadsChart.vue"],"sourcesContent":["<template>\n  <div class=\"uploads-chart\">\n    <canvas ref=\"uploadsChartCanvas\"></canvas>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD0-Gcro2-YgPSdeDuoiHmXRq9akRteGKg',\n  authDomain: 'biscuitt-21b7d.firebaseapp.com',\n  databaseURL: \"https://biscuitt-21b7d.firebaseio.com\",\n  projectId: 'biscuitt-21b7d',\n  storageBucket: 'biscuitt-21b7d.appspot.com',\n  messagingSenderId: '138914182592',\n  appId: '1:138914182592:android:0ad3a72da157ea12534425'\n};\n\nexport default {\n  name: 'UploadsChart',\n  data() {\n    return {\n      chart: null,\n      data: null,\n      countValue: null, // Initialize countValue in the component's data\n    };\n  },\n  async mounted() {\n    // Fetch count from Firestore and set countValue\n    await this.fetchCount();\n    // Fetch data for the chart\n    this.fetch();\n  },\n  watch: {\n    data: 'createChart',\n  },\n  methods: {\n    async fetchCount() {\n      const firebaseApp = initializeApp(firebaseConfig);\n      const db = getFirestore(firebaseApp);\n      const docRef = doc(db, \"file_tracking\", \"pick_file_counter\");\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        this.countValue = docSnap.data().count;\n        console.log(\"Count Value:\", this.countValue);\n      } else {\n        console.log(\"No such document!\");\n      }\n\n      console.log('Firestore Database:', db);\n    },\n    async fetch() {\n      this.data = await this.func();\n    },\n    async func() {\n      console.log(\"hello world\", this.countValue);\n      return [3, 6, 4, 8, 0, this.countValue];\n    },\n    createChart() {\n      if (this.data) {\n        const ctx = this.$refs.uploadsChartCanvas.getContext('2d');\n        this.chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: ['2023-11-27', '2023-11-28', '2023-11-29', '2023-11-30', '2023-12-01', '2023-12-02'],\n            datasets: [{\n              label: 'Number of Uploads',\n              data: this.data,\n              backgroundColor: 'rgba(54, 162, 235, 0.5)',\n              borderColor: 'rgba(54, 162, 235, 1)',\n              fill: false,\n            }]\n          },\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            },\n            responsive: false,\n          }\n        });\n      }\n    },\n  }\n};\n</script>\n\n<style scoped>\n  canvas {\n    width: 100%;\n    height: 100%;\n    margin: auto;\n  }\n  .uploads-chart {\n    width: 100%;\n    margin: 20px auto;\n  }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}